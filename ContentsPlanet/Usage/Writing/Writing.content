---
parent: ../Usage
title: コンテンツの書き方
date: 2019-8-12
tags: 書き方
---

例をまじえながら具体的なコンテンツの書き方を説明します．

===

# 前提
    このコンテンツを含むディレクトリ構造は次の通りです．

    + (親ディレクトリ)
        + `Writing.content` <-(このコンテンツ)
        + ...
    
    
# 1. ディレクトリを作成
    コンテンツファイルを入れるためのディレクトリを作成します．
    作成しようとしているコンテンツのカテゴリとしてふさわしい名前を決めます．
    今回は，例のコンテンツなのでディレクトリ名は`Example`にしました．
    
    作成後のディレクトリ構造は以下のようになります．
    

    + (親ディレクトリ)
        + `Writing.content`
        + `Example`
        + ...
    
    [ディレクトリの新規作成は必要?]
    =========
        新しいコンテンツごとにディレクトリを新規作成する必要はありません．
        
        作成しようとしているコンテンツが入るにふさわしいディレクトリが既にある場合は，
        そのディレクトリ内にコンテンツを作成します．
    
    =========
    
# 2. コンテンツファイルの作成
    作成した`Example`ディレクトリに新しくコンテンツファイル`Example.content`を作成します．
    
    
    + (親ディレクトリ)
        + `Writing.content`
        + `Example`
            + `Example.content`
        + ...
        
# 3. コンテンツの記述
    それでは，実際に`Example.content`を編集していきます．
    
    まず，コンテンツのメタデータとなるヘッダ情報を記述します．
    
    ```xml
        <Header>
            <Parent> ../Writing
            <Title> 新規性がはっきり感じとれるタイトル
            <CreatedAt> 2019-8-12
            <Tags> キーワード, 編集中
            <Summary>
                パッと分かる背景．ずばり問題点．
                このコンテンツの目的．
        
                ずばっと結論．補足でありつつ重要である要素三個ほど．
            </Summary>
        </Header>
    
    ```
    
    各タグ名の詳細は以下のとおりです．
    
    |[タグ詳細]
    |--------||------------------------------------------|
    | Parent || 自身のコンテンツの親コンテンツ(相対パス) |
    | Title  || コンテンツタイトル                       |
    | CreatedAt || コンテンツ作成日時 (YYYY-mm-dd)       |
    | Tags      || タグ情報. `,`で区切る                 |
    | Summary   || コンテンツ要約                        |
    | Child     || 子コンテンツ(相対パス)                |
    
    
    その下に続けて，コンテンツの本文を書きます．
    
    ```xml
        <Header>
            <Parent> ../Writing
            <Title> 新規性がはっきり感じとれるタイトル
            <CreatedAt> 2019-8-12
            <Tags> キーワード, 編集中
            <Summary>
                パッと分かる背景．ずばり問題点．
                このコンテンツの目的．
        
                ずばっと結論．補足でありつつ重要である要素三個ほど．
            </Summary>
        </Header>
        
        # ひきこまれる"はじめに"
            誰もが納得し，共感するはじめ．
            近年ある背景^[tashikana-source]．
        
        # 提案前の周辺の説明
            提案の前にね，こういうのがあって，これはこんなもんです．
        
            # こんなやつ
                こんなやつはこーで
        
            # あんなやつ
                あんなやつはあーで
        
                [脱線]
                =======
                    たまに脱線
                =======
        
        # やってみた
            提案開始．
        
            手順はこうで，
        
            1. 手
            2. 準
            3. だ
            
            コードは下のように．
        
            ```python
                import sugoi_module
        
                sugoi_module.kakumeitekina_kansu(ikanaru_hikisu)
            ```
        
            結果はこう!
        
            |[結果表]
            |      ||  実行速度  |  精度  |
            |------||------------|--------|
            | 提案 || はやっ     | よき   |
            | 従来 || おそっ     | あし   |
        
        
        ----------------------------------------------------------------------
        
        # 参考文献
            [tashikana-source]: たしかなソース
        
    
    ```
    
    作成したコンテンツのブラウザ上での表示は[Exampleページ](./Example/Example)

    これでコンテンツの作成は終わりです．
    
# 4. 親から作成コンテンツへのリンク
    最後に，作成したコンテンツがルート(根)からたどれるように親コンテンツから作成したコンテンツへリンクを張ります．
    
    親コンテンツを開き(ここでは，`Writing.content`)以下のように`Child`タグを追加します．
    
    ```xml
        <Header>
            <Parent> (親コンテンツ)
            <Title> コンテンツの書き方
            <CreatedAt> 2019-8-12
            <Tags> 書き方
            <Summary>
                例をまじえながら具体的なコンテンツの書き方を説明します．
            </Summary>
            
            <Child> Example/Example <-これ!!
        </Header>
        
    ```

# まとめ
    
    [要点]
    =======
        # コンテンツを入れるディレクトリの作成(必要なら)
        # コンテンツファイルの作成(拡張子`.content`)
        # ヘッダ情報を記述
            ```xml
                <Header>
                    <Parent> ../Writing
                    <Title> 新規性がはっきり感じとれるタイトル
                    <CreatedAt> 2019-8-12
                    <Tags> キーワード, 編集中
                    <Summary>
                        パッと分かる背景．ずばり問題点．
                        このコンテンツの目的．
                
                        ずばっと結論．補足でありつつ重要である要素三個ほど．
                    </Summary>
                </Header>
            ```
        # 本文記述
        # 親からのリンク
            ```xml
                <Header>
                    <Parent> (親コンテンツ)
                    <Title> コンテンツの書き方
                    <CreatedAt> 2019-8-12
                    <Tags> 書き方
                    <Summary>
                        例をまじえながら具体的なコンテンツの書き方を説明します．
                    </Summary>
                    
                    <Child> Example/Example <-これ!!
                </Header>
                
            ```
            
    =======
    
